---
import Navigation from "../components/Navigation.astro";
import Footer from "../components/Footer.astro";
import "../styles/base.css";

interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "HypeQuery documentation - Learn how to build type-safe dashboards with ClickHouse",
} = Astro.props;

// Define the navigation structure directly since we're using pages-based routing
const sidebar = [
  {
    title: "Getting Started",
    items: [{ title: "Quick Start", href: "/docs/quickstart" }],
  },
  {
    title: "Guides",
    items: [
      { title: "Query Building", href: "/docs/guides/query-building" },
      { title: "Join Relationships", href: "/docs/guides/joins" },
      { title: "Advanced Filtering", href: "/docs/guides/filtering" },
    ],
  },
  {
    title: "API Reference",
    items: [{ title: "API Reference", href: "/docs/reference/api" }],
  },
];
---

<!doctype html>
<html lang="en" class="h-full bg-gray-50">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />

    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="h-full">
    <Navigation />

    <div
      class="relative mx-auto max-w-8xl justify-center sm:px-2 lg:px-8 xl:px-12 pt-16"
    >
      <div class="relative flex min-h-[calc(100vh-4rem)]">
        <!-- Sidebar -->
        <div class="hidden lg:relative lg:block lg:flex-none">
          <div class="absolute inset-y-0 right-0 w-[1px] bg-gray-200"></div>
          <div
            class="sticky top-[4.5rem] -ml-0.5 h-[calc(100vh-4.5rem)] overflow-y-auto overflow-x-hidden py-16 pl-0.5"
          >
            <nav class="w-56 pr-8 text-base lg:text-sm">
              {
                sidebar.map((section) => (
                  <div class="mt-8 first:mt-0">
                    <h3 class="font-semibold text-gray-900">{section.title}</h3>
                    <ul class="mt-4 space-y-4">
                      {section.items.map((item) => (
                        <li>
                          <a
                            href={item.href}
                            class="text-gray-600 hover:text-indigo-600"
                          >
                            {item.title}
                          </a>
                        </li>
                      ))}
                    </ul>
                  </div>
                ))
              }
            </nav>
          </div>
        </div>

        <!-- Main content -->
        <div
          class="min-w-0 max-w-2xl flex-auto px-4 py-16 lg:max-w-none lg:pl-8 lg:pr-0 xl:px-16"
        >
          <article class="prose max-w-none">
            <slot />
          </article>
        </div>
      </div>
    </div>

    <Footer />
    <script>
      document.addEventListener("astro:page-load", () => {
        // Add copy button to all code blocks
        document.querySelectorAll("pre").forEach((pre) => {
          // Create wrapper div
          const wrapper = document.createElement("div");
          wrapper.className = "relative group";
          pre.parentNode.insertBefore(wrapper, pre);
          wrapper.appendChild(pre);

          // Create copy button
          const button = document.createElement("button");
          button.className =
            "copy-button absolute right-2 top-2 rounded-md p-2 text-gray-400 opacity-0 transition-opacity hover:text-gray-200 group-hover:opacity-100 bg-black/30 border border-white/10";
          button.innerHTML = `
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <rect width="14" height="14" x="8" y="8" rx="2" ry="2" />
              <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" />
            </svg>
          `;

          // Add click handler
          button.addEventListener("click", async () => {
            const code = pre.textContent || "";

            try {
              await navigator.clipboard.writeText(code);

              // Show success state
              button.innerHTML = `
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <polyline points="20 6 9 17 4 12" />
                </svg>
              `;

              // Reset after 2 seconds
              setTimeout(() => {
                button.innerHTML = `
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <rect width="14" height="14" x="8" y="8" rx="2" ry="2" />
                    <path d="M4 16c-1.1 0-2-.9-2-2V4c0-1.1.9-2 2-2h10c1.1 0 2 .9 2 2" />
                  </svg>
                `;
              }, 2000);
            } catch (err) {
              console.error("Failed to copy code:", err);
            }
          });

          wrapper.appendChild(button);
        });
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    --font-fallback: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica,
      Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji;
    --font-body: "Inter", var(--font-fallback);
    --theme-text: #1f2937;
    --theme-bg: #ffffff;
    --theme-primary: #4f46e5;
    --theme-primary-hover: #4338ca;
  }

  html {
    font-family: var(--font-body);
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
    color: var(--theme-text);
    background: var(--theme-bg);
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  /* Prose styles for markdown content */
  .prose {
    color: var(--theme-text);
  }

  .prose h1 {
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
    font-weight: 600;
  }

  .prose h2 {
    font-size: 1.5em;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
    font-weight: 600;
  }

  .prose h3 {
    font-size: 1.25em;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
    font-weight: 600;
  }

  .prose code {
    color: var(--theme-text);
    background-color: #f3f4f6;
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.875em;
  }

  .prose pre {
    color: #e5e7eb;
    background-color: #1f2937;
    overflow-x: auto;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding: 0.8571429em 1.1428571em;
  }

  .prose pre code {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: 400;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }
</style>
