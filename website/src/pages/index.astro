---
import Layout from "../layouts/Layout.astro";
---

<Layout title="HypeQuery - Build ClickHouse Dashboards Fast!">
  <main>
    <!-- Hero Section -->
    <section class="relative overflow-hidden bg-gray-900 py-24 sm:py-32">
      <div
        class="absolute inset-0 bg-[url(/grid.svg)] bg-center [mask-image:linear-gradient(180deg,white,rgba(255,255,255,0))]"
      >
      </div>
      <div class="relative mx-auto max-w-7xl px-6 lg:px-8">
        <div class="text-center">
          <div class="mb-8 flex justify-center">
            <div
              class="relative rounded-full px-3 py-1 text-sm leading-6 text-gray-400 ring-1 ring-gray-500/20"
            >
              Now with full TypeScript support
              <span class="font-mono text-indigo-400">v1.0.0</span>
            </div>
          </div>
          <h1
            class="font-mono text-4xl font-bold tracking-tight text-white sm:text-6xl"
          >
            <span class="text-indigo-400">{`>`}</span> hypequery init<span
              class="animate-blink">_</span
            >
          </h1>
          <p class="mt-6 text-lg leading-8 text-gray-300">
            Build type-safe dashboards with the power of ClickHouse and the joy
            of TypeScript. No more SQL strings, just pure coding happiness! üöÄ
          </p>
          <div class="mt-10 flex items-center justify-center gap-x-6">
            <a
              href="/docs"
              class="rounded-md bg-indigo-500 px-4 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-500"
            >
              $ npm start tutorial
            </a>
            <a
              href="https://github.com/yourusername/hypequery"
              class="text-sm font-mono leading-6 text-gray-300 hover:text-white"
            >
              <span class="text-indigo-400">git</span> clone repo <span
                aria-hidden="true">‚Üí</span
              >
            </a>
          </div>
        </div>

        <!-- Code Preview -->
        <div class="mt-16 flow-root sm:mt-24">
          <div
            class="relative rounded-xl bg-gray-800/50 p-2 ring-1 ring-white/10 backdrop-blur-xl"
          >
            <div
              class="absolute -top-px left-20 right-11 h-px bg-gradient-to-r from-indigo-500/0 via-indigo-500/70 to-indigo-500/0"
            >
            </div>
            <div
              class="absolute -bottom-px left-11 right-20 h-px bg-gradient-to-r from-indigo-400/0 via-indigo-400/70 to-indigo-400/0"
            >
            </div>
            <div class="pl-4 pt-4">
              <div class="flex text-sm leading-6">
                <div class="flex h-7 items-center space-x-2">
                  <div class="h-3 w-3 rounded-full bg-red-400"></div>
                  <div class="h-3 w-3 rounded-full bg-yellow-400"></div>
                  <div class="h-3 w-3 rounded-full bg-green-400"></div>
                </div>
                <div class="ml-4 flex items-center font-mono text-gray-400">
                  dashboard.ts
                </div>
              </div>
            </div>
            <div class="mt-6 space-y-6 px-6 pb-14 text-gray-300">
              <span class="text-gray-500"
                >// Type-safe queries with autocomplete! üéâ</span
              >
              <span class="text-indigo-400">const</span> results = <span
                class="text-indigo-400">await</span
              > db .table(<span class="text-green-400">'events'</span>)
              .select([<span class="text-green-400">'date'</span>, <span
                class="text-green-400">'user_id'</span
              >]) .where(<span class="text-green-400">'type'</span>, <span
                class="text-green-400">'eq'</span
              >, <span class="text-green-400">'purchase'</span>) .groupBy(<span
                class="text-green-400">'date'</span
              >) .sum(<span class="text-green-400">'amount'</span>) .execute();
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<!-- Features Section -->
<section class="bg-white py-24 sm:py-32">
  <div class="mx-auto max-w-7xl px-6 lg:px-8">
    <div class="mx-auto max-w-2xl lg:text-center">
      <h2 class="text-base font-semibold leading-7 text-indigo-600">
        Features that spark joy ‚ú®
      </h2>
      <p
        class="mt-2 text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl"
      >
        Everything you need to build amazing dashboards
      </p>
    </div>
    <div class="mx-auto mt-16 max-w-2xl sm:mt-20 lg:mt-24 lg:max-w-none">
      <dl
        class="grid max-w-xl grid-cols-1 gap-x-8 gap-y-16 lg:max-w-none lg:grid-cols-3"
      >
        <div class="flex flex-col">
          <dt
            class="flex items-center gap-x-3 text-base font-semibold leading-7 text-gray-900"
          >
            <div
              class="flex h-10 w-10 items-center justify-center rounded-lg bg-indigo-500"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6 text-white"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M17.25 6.75L22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3l-4.5 16.5"
                ></path>
              </svg>
            </div>
            Type-Safe Queries
          </dt>
          <dd
            class="mt-4 flex flex-auto flex-col text-base leading-7 text-gray-600"
          >
            <p class="flex-auto">
              Full TypeScript support with autocomplete. Your IDE becomes your
              best friend! ü§ù
            </p>
          </dd>
        </div>
        <div class="flex flex-col">
          <dt
            class="flex items-center gap-x-3 text-base font-semibold leading-7 text-gray-900"
          >
            <div
              class="flex h-10 w-10 items-center justify-center rounded-lg bg-indigo-500"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6 text-white"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"
                ></path>
              </svg>
            </div>
            Smart Joins
          </dt>
          <dd
            class="mt-4 flex flex-auto flex-col text-base leading-7 text-gray-600"
          >
            <p class="flex-auto">
              Define relationships once, use them everywhere. No more JOIN
              string gymnastics! ü§∏‚Äç‚ôÇÔ∏è
            </p>
          </dd>
        </div>
        <div class="flex flex-col">
          <dt
            class="flex items-center gap-x-3 text-base font-semibold leading-7 text-gray-900"
          >
            <div
              class="flex h-10 w-10 items-center justify-center rounded-lg bg-indigo-500"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke-width="1.5"
                stroke="currentColor"
                class="w-6 h-6 text-white"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z"
                ></path>
              </svg>
            </div>
            Advanced Filtering
          </dt>
          <dd
            class="mt-4 flex flex-auto flex-col text-base leading-7 text-gray-600"
          >
            <p class="flex-auto">
              Build complex filters with nested AND/OR conditions. All type-safe
              and validated! üéØ
            </p>
          </dd>
        </div>
      </dl>
    </div>
  </div>
</section>

<style>
  @keyframes blink {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0;
    }
  }

  .animate-blink {
    animation: blink 1s step-end infinite;
  }
</style>
